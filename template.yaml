AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.10

  Sample SAM Template for lab-api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 300
  Api:
    Cors:
      AllowMethods: "'GET,POST,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"
      # AllowCredentials: true  Uncomment only if you choose a specific origin instead of the * wildcard.
Parameters:
  SourceBucketName:
    Type: String
    Default: tracks-source-nl

  DestinationBucketName:
    Type: String
    Default: tracks-destination-nl

Resources:
  SourceAudio:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SourceBucketName
      # NotificationConfiguration:
      #   LambdaConfigurations:
      #     - Event: s3:ObjectCreated:*
      #       Function: !GetAtt SplitAudioFunction.Arn
      #       Filter:
      #         S3Key:
      #           Rules:
      #           - Name: suffix
      #             Value: .txt

  DestinationAudio:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DestinationBucketName

  CreateStems:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      PackageType: Image
      Architectures:
        - x86_64
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SourceBucketName
        - S3CrudPolicy:
            BucketName: !Ref DestinationBucketName
      Environment:
        Variables:
          DESTINATION_BUCKET: !Ref DestinationBucketName
          SOURCE_BUCKET: !Ref SourceBucketName
      Events:
        CreateStems:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /split
            Method: post
        FileUpload:
          Type: S3
          Properties:
            Bucket: !Ref SourceAudio
            Events: s3:ObjectCreated:*

            # Filter:
            #   S3Key:
            #     Rules:
            #       - Name: suffix
            #         Value: '.wav','.mp3'

    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src/split
      DockerTag: python3.10

  AudiotoMidi:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref SourceBucketName
        - S3CrudPolicy:
            BucketName: !Ref DestinationBucketName
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src/midi
      DockerTag: python3.10

  # PresignedUrl:
  #     Type: AWS::Serverless::Function
  #     Properties:
  #       PackageType: Image
  #       Architectures:
  #         - x86_64
  #       FunctionUrlConfig:
  #         AuthType: NONE
  #         InvokeMode: RESPONSE_STREAM
  #       # CodeUri: presigned-url/
  #       # Handler: app.lambda_handler
  #       # Runtime: python3.8
  #       # Environment:
  #       #   Variables:
  #       #     # TABLE: !Ref Table
  #       #     REGION: !Ref Region
  #       #     AWSENV: !Ref AWSEnv
  #       Events:
  #         PresignedUrl:
  #           Type: Api
  #           Properties:
  #             Path: /presigned-url
  #             Method: post
  #     Metadata:
  #           Dockerfile: Dockerfile
  #           DockerContext: ./src/presigned-url
  #           DockerTag: python3.10

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  CreateStemsApi:
    Description: "API Gateway endpoint URL for Prod stage for function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/split/"
  # CreateStems:
  #   Description: "split audio Lambda Function ARN"
  #   Value: !GetAtt CreateStems.Arn
  # CreateStemsIamRole:
  #   Description: "Implicit IAM Role created for split audio function"
  #   Value: !GetAtt CreateStemsRole.Arn
